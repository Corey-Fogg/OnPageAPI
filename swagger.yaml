openapi: 3.0.0
info:
  title: OnPage API
  description: OpenAPI definition for managing dispatching, pages, contacts, administrators, templates, settings, and webhooks.
  version: 1.0.0
servers:
  - url: https://api.onpage.com/rest/
    description: Production API server
paths:
  /attachments:
    get:
      summary: Get a list of attachments
      tags:
        - Attachments
      responses:
        '200':
          description: List of attachments
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    post:
      summary: Upload a new attachment
      tags:
        - Attachments
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: Attachment uploaded successfully
  /attachments/{id}:
    delete:
      summary: Delete an attachment
      tags:
        - Attachments
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Attachment deleted successfully
  /page/replies:
    get:
      summary: Get replies to pages
      tags:
        - Page
      responses:
        '200':
          description: List of replies
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /page:
    get:
      summary: Get a list of pages
      tags:
        - Page
      responses:
        '200':
          description: List of pages
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    post:
      summary: Create a page
      tags:
        - Page
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                message:
                  type: object
                  properties:
                    subject:
                      type: string
                    body:
                      type: string
                    contacts:
                      type: array
                      items:
                        type: string
                    from:
                      type: string
                    priority:
                      type: string
                      enum: [HIGH, MEDIUM, LOW]
                    attachments:
                      type: array
                      items:
                        type: string
                    possibleAnswers:
                      type: array
                      items:
                        type: string
                    callbackUri:
                      type: string
      responses:
        '201':
          description: Page created successfully
        '400':
          description: Bad request
  /page/search:
    get:
      summary: Search pages
      tags:
        - Page
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Search results for pages
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /page/{id}:
    get:
      summary: Get details of a specific page
      tags:
        - Page
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Page details
          content:
            application/json:
              schema:
                type: object
  /contacts:
    get:
      summary: Get a list of contacts
      tags:
        - Contacts
      responses:
        '200':
          description: List of contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    post:
      summary: Create a recipient
      tags:
        - Contacts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '201':
          description: Recipient created successfully
  /contacts/search:
    get:
      summary: Search contacts
      tags:
        - Contacts
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Search results for contacts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
  /contacts/status:
    get:
      summary: Get contact status
      tags:
        - Contacts
      responses:
        '200':
          description: Contact status overview
          content:
            application/json:
              schema:
                type: object
                properties:
                  online:
                    type: array
                    items:
                      type: string
                  pagersTurnedOff:
                    type: array
                    items:
                      type: string
                  offline:
                    type: array
                    items:
                      type: string
  /contacts/{id}:
    put:
      summary: Update a recipient
      tags:
        - Contacts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
      responses:
        '200':
          description: Recipient updated successfully
    delete:
      summary: Delete a recipient
      tags:
        - Contacts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Recipient deleted successfully
  /contacts/groups:
    get:
      summary: Get groups of contacts
      tags:
        - Contacts
      responses:
        '200':
          description: List of recipient groups
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    post:
      summary: Create a group
      tags:
        - Contacts
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '201':
          description: Group created successfully
  /contacts/groups/{id}:
    put:
      summary: Update a group
      tags:
        - Contacts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: Group updated successfully
    delete:
      summary: Delete a group
      tags:
        - Contacts
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Group deleted successfully
  /contacts/groups/{groupId}/contacts:
    post:
      summary: Add a contact to a group
      tags:
        - Contacts
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                contactId:
                  type: string
      responses:
        '200':
          description: Contact added to group
  /contacts/groups/{groupId}/contacts/{contactId}:
    delete:
      summary: Remove a contact from a group
      tags:
        - Contacts
      parameters:
        - name: groupId
          in: path
          required: true
          schema:
            type: string
        - name: contactId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Contact removed from group
  /administrators:
    get:
      summary: Get a list of administrators
      tags:
        - Administrators
      responses:
        '200':
          description: List of administrators
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
              example:
                administrators:
                  - id: "string"
                    email: "string"
                    firstName: "string"
                    lastName: "string"
                    superAdmin: true
                    phoneNumber: "string"
    post:
      summary: Create an administrator
      tags:
        - Administrators
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                superAdmin:
                  type: boolean
                phoneNumber:
                  type: string
      responses:
        '201':
          description: Administrator created successfully
  /administrators/{id}:
    put:
      summary: Update an administrator
      tags:
        - Administrators
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                firstName:
                  type: string
                lastName:
                  type: string
                superAdmin:
                  type: boolean
                phoneNumber:
                  type: string
      responses:
        '200':
          description: Administrator updated successfully
    delete:
      summary: Delete an administrator
      tags:
        - Administrators
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Administrator deleted successfully
  /templates:
    get:
      summary: Get a list of templates
      tags:
        - Templates
      responses:
        '200':
          description: List of templates
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
    post:
      summary: Create a template
      tags:
        - Templates
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Template created successfully
  /templates/{id}:
    put:
      summary: Update a template
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                content:
                  type: string
      responses:
        '200':
          description: Template updated successfully
    delete:
      summary: Delete a template
      tags:
        - Templates
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Template deleted successfully
  /settings:
    get:
      summary: Get settings
      tags:
        - Settings
      responses:
        '200':
          description: Current settings
          content:
            application/json:
              schema:
                type: object
                properties:
                  onCallReminder:
                    type: string
                    enum: [Never, "30 Minutes", "60 Minutes"]
                    description: Reminder setting for on-call notifications
                  twoFactorRequired:
                    type: string
                    enum: ["Once per day", "Every Login", "Every 8 Hours"]
                    description: Frequency of two-factor authentication requirements
    put:
      summary: Update settings
      tags:
        - Settings
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                key:
                  type: string
                  enum: [onCallReminder, twoFactorRequired]
                  description: The key of the setting to update
                value:
                  type: string
                  description: The value to assign to the setting
                  enum: [Never, "30 Minutes", "60 Minutes", "Once per day", "Every Login", "Every 8 Hours"]
      responses:
        '200':
          description: Settings updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  updatedKey:
                    type: string
                  updatedValue:
                    type: string
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
